[!--
This page is generated by a build process. Any changes you make to it will be automatically overwritten when the page is regenerated.

To make permanent changes to the tag definitions on this page or to add/remove tags, please follow the instructions on this page:
http://05command.wikidot.com/some-page-i-havent-made-yet
--]

[[module CSS]]
#edit-page-form .buttons.alignleft::before {
  content: "Please make sure you understand the warning at the top of the page source before saving your edits!";
  display: block;
  margin-bottom: 1em;
  font-weight: bold;
  color: red;
}

#page-content ul > li {
  margin-top: 0.5em;
  line-height: 1.25em;
}

#page-content ul > li li {
  margin-top: 0.25em;
  list-style: circle;
}
[[/module]]

> This page has a comprehensive list of tags available on the wiki.  For help with actually deciding which tags to use, please refer to the [[[tech-hub-tag | tag guide]]].

When choosing tags for an article, keep in mind that you want to keep the list as short as possible; the goal should be to choose tags that are already being used, rather than create a new one. If staff should determine that a new tag is necessary, they can always retroactively tag articles as necessary. If you would like to suggest a new tag, please do so in the [http://scp-wiki.wikidot.com/forum/c-51015/proposals-and-policy stickied tag suggestion thread].

[[tabview]]
<% [
  "top-level/", "major/",
  "object-classes/", "attributes/",
  "major-goi/", "minor-goi/", "goi-format/",
  "canons/", "tale-series/", "characters/", "locations/",
  "content-markers/", "staff-process/", "contests/", "other/"
].forEach(categoryName => {
  const category = getCategory(categoryName); %>
[[tab <%- category.name ? category.name : categoryName %>]]
++ <%- category.name ? category.name : categoryName %>

<%- category.description %>

<% if (category._relationships.length > 0) { %>
[[div class="blockquote"]]
The following <%- category._relationships.length === 1 ? "applies" : "apply" %> to all tags in this category:

<% category._relationships.forEach(relationship => { -%>
* <%- relationship %>
<% }) %>
[[/div]]
<% } %>

<% Object.entries(category.tags).forEach(([tagName, tag]) => { -%>
* **[http://scp-wiki.wikidot.com/system:page-tags/tag/<%- tagName %> <%- tagName %>]** <%- tag.description ? `-- ${tag.description}` : "" %>
<% tag._relationships.forEach(relationship => { -%>
 * //<%- relationship %>//
<% }) -%>
<% }) %>

<% category.sections.forEach(section => { %>

+++ <%- section.name ? section.name : "Unnamed section" %>

<%- section.description %>

<% Object.entries(section.tags).forEach(([tagName, tag]) => { -%>
* **[http://scp-wiki.wikidot.com/system:page-tags/tag/<%- tagName %> <%- tagName %>]** <%- tag.description ? `-- ${tag.description}` : "" %>
<% tag._relationships.forEach(relationship => { -%>
 * //<%- relationship %>//
<% }) -%>
<% }) %>

<% }) %>
[[/tab]]
<% }) %>
[[/tabview]]

[!-- Tag description TOML for http://crom.wikidot.com/tag-search --]
[[code]]
<% [
  "top-level/", "major/",
  "object-classes/", "attributes/",
  "goi/", "goi-format/",
  "canons/", "tale-series/", "characters/", "locations/",
  "content-markers/", "staff-process/", "contests/", "other/"
].forEach(categoryName => {
  const category = getCategory(categoryName); -%>
<% Object.entries(category.tags).forEach(([tagName, tag]) => { -%>
[[tags]]
name = <%- JSON.stringify(tagName) %>
description = <%- JSON.stringify(tag['description-plain'] || tag['description']) %>

<% }) -%>
<% }) -%>
[[/code]]
